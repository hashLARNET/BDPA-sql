#!/usr/bin/env python3
"""
Script para ejecutar la aplicaci√≥n BDPA Tkinter
"""

import sys
import os
from pathlib import Path

# Agregar el directorio frontend al path
frontend_dir = Path(__file__).parent
sys.path.insert(0, str(frontend_dir))

# Verificar que el backend est√© ejecut√°ndose
def check_backend():
    """Verificar que el backend est√© disponible"""
    import requests
    from config import Config
    
    config = Config()
    try:
        response = requests.get(f"{config.API_BASE_URL}/health", timeout=5)
        if response.status_code == 200:
            print("‚úÖ Backend disponible")
            return True
        else:
            print(f"‚ö†Ô∏è Backend responde con c√≥digo {response.status_code}")
            return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Backend no disponible: {e}")
        print(f"   Aseg√∫rate de que el backend est√© ejecut√°ndose en {config.API_BASE_URL}")
        return False

def main():
    """Funci√≥n principal"""
    print("üöÄ Iniciando BDPA - Los Encinos (Frontend Tkinter)")
    print("=" * 60)
    
    # Verificar backend
    if not check_backend():
        print("\nüí° Para iniciar el backend:")
        print("   1. cd al directorio del backend")
        print("   2. python main.py")
        print("\n‚ùå No se puede continuar sin el backend")
        return
    
    # Importar y ejecutar la aplicaci√≥n
    try:
        from main import main as app_main
        print("‚úÖ Iniciando interfaz gr√°fica...")
        app_main()
    except ImportError as e:
        print(f"‚ùå Error importando la aplicaci√≥n: {e}")
        print("   Verifica que todas las dependencias est√©n instaladas")
    except Exception as e:
        print(f"‚ùå Error ejecutando la aplicaci√≥n: {e}")

if __name__ == "__main__":
    main()